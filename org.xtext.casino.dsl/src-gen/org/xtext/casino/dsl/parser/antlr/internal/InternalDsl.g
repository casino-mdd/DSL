/*
 * generated by Xtext 2.18.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.casino.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.casino.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.casino.dsl.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Domain";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getModulesModuleParserRuleCall_1_0());
				}
				lv_modules_1_0=ruleModule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"modules",
						lv_modules_1_0,
						"org.xtext.casino.dsl.Dsl.Module");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='module'
		{
			newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getSubmodulesSubmoduleParserRuleCall_3_0());
				}
				lv_submodules_3_0=ruleSubmodule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"submodules",
						lv_submodules_3_0,
						"org.xtext.casino.dsl.Dsl.Submodule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSubmodule
entryRuleSubmodule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubmoduleRule()); }
	iv_ruleSubmodule=ruleSubmodule
	{ $current=$iv_ruleSubmodule.current; }
	EOF;

// Rule Submodule
ruleSubmodule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='submodule'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubmoduleAccess().getSubmoduleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubmoduleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubmoduleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubmoduleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubmoduleAccess().getOperationsOperationParserRuleCall_3_0());
				}
				lv_operations_3_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubmoduleRule());
					}
					add(
						$current,
						"operations",
						lv_operations_3_0,
						"org.xtext.casino.dsl.Dsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSubmoduleAccess().getEntitiesSpecialEntityParserRuleCall_4_0_0());
					}
					lv_entities_4_1=ruleSpecialEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubmoduleRule());
						}
						add(
							$current,
							"entities",
							lv_entities_4_1,
							"org.xtext.casino.dsl.Dsl.SpecialEntity");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getSubmoduleAccess().getEntitiesGeneralEntityParserRuleCall_4_0_1());
					}
					lv_entities_4_2=ruleGeneralEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubmoduleRule());
						}
						add(
							$current,
							"entities",
							lv_entities_4_2,
							"org.xtext.casino.dsl.Dsl.GeneralEntity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSubmoduleAccess().getRelationsRelationDomParserRuleCall_5_0());
				}
				lv_relations_5_0=ruleRelationDom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubmoduleRule());
					}
					add(
						$current,
						"relations",
						lv_relations_5_0,
						"org.xtext.casino.dsl.Dsl.RelationDom");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubmoduleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current.getText(); }
	EOF;

// Rule Operation
ruleOperation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_0());
		}
		kw='type:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperationAccess().getTypeKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getOperationAccess().getSubOperationParserRuleCall_2());
		}
		this_SubOperation_2=ruleSubOperation
		{
			$current.merge(this_SubOperation_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSubOperation
entryRuleSubOperation returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSubOperationRule()); }
	iv_ruleSubOperation=ruleSubOperation
	{ $current=$iv_ruleSubOperation.current.getText(); }
	EOF;

// Rule SubOperation
ruleSubOperation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Read'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSubOperationAccess().getReadKeyword_0());
		}
		    |
		kw='Create'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSubOperationAccess().getCreateKeyword_1());
		}
	)
;

// Entry rule entryRuleGeneralEntity
entryRuleGeneralEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneralEntityRule()); }
	iv_ruleGeneralEntity=ruleGeneralEntity
	{ $current=$iv_ruleGeneralEntity.current; }
	EOF;

// Rule GeneralEntity
ruleGeneralEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generalEntity'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneralEntityAccess().getGeneralEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGeneralEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneralEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneralEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneralEntityAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneralEntityRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.xtext.casino.dsl.Dsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getGeneralEntityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='property'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getPropertyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSpecialEntity
entryRuleSpecialEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialEntityRule()); }
	iv_ruleSpecialEntity=ruleSpecialEntity
	{ $current=$iv_ruleSpecialEntity.current; }
	EOF;

// Rule SpecialEntity
ruleSpecialEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='specialEntity'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpecialEntityAccess().getSpecialEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpecialEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpecialEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecialEntityAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecialEntityRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.xtext.casino.dsl.Dsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		{
			newCompositeNode(grammarAccess.getSpecialEntityAccess().getRoleParserRuleCall_4());
		}
		ruleRole
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecialEntityAccess().getTransactionsTransactionParserRuleCall_5_0());
				}
				lv_transactions_5_0=ruleTransaction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecialEntityRule());
					}
					add(
						$current,
						"transactions",
						lv_transactions_5_0,
						"org.xtext.casino.dsl.Dsl.Transaction");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSpecialEntityAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current.getText(); }
	EOF;

// Rule Role
ruleRole returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Admin'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRoleAccess().getAdminKeyword_0());
		}
		    |
		kw='Aux'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRoleAccess().getAuxKeyword_1());
		}
	)
;

// Entry rule entryRuleTransaction
entryRuleTransaction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransactionRule()); }
	iv_ruleTransaction=ruleTransaction
	{ $current=$iv_ruleTransaction.current; }
	EOF;

// Rule Transaction
ruleTransaction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransactionAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='type:'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransactionAccess().getTypeKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getTransactionAccess().getSubTransactionParserRuleCall_2());
		}
		ruleSubTransaction
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_3='operates_on:'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransactionAccess().getOperates_onKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getTransactionAccess().getGeneralEntityParserRuleCall_4());
		}
		this_GeneralEntity_4=ruleGeneralEntity
		{
			$current = $this_GeneralEntity_4.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTransactionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSubTransaction
entryRuleSubTransaction returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSubTransactionRule()); }
	iv_ruleSubTransaction=ruleSubTransaction
	{ $current=$iv_ruleSubTransaction.current.getText(); }
	EOF;

// Rule SubTransaction
ruleSubTransaction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Exchange'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSubTransactionAccess().getExchangeKeyword_0());
		}
		    |
		kw='Sale'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSubTransactionAccess().getSaleKeyword_1());
		}
	)
;

// Entry rule entryRuleRelationDom
entryRuleRelationDom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationDomRule()); }
	iv_ruleRelationDom=ruleRelationDom
	{ $current=$iv_ruleRelationDom.current; }
	EOF;

// Rule RelationDom
ruleRelationDom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='{'
			{
				newLeafNode(otherlv_0, grammarAccess.getRelationDomAccess().getLeftCurlyBracketKeyword_0_0());
			}
			otherlv_1='type:'
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationDomAccess().getTypeKeyword_0_1());
			}
			otherlv_2='Composition'
			{
				newLeafNode(otherlv_2, grammarAccess.getRelationDomAccess().getCompositionKeyword_0_2());
			}
			otherlv_3='source:'
			{
				newLeafNode(otherlv_3, grammarAccess.getRelationDomAccess().getSourceKeyword_0_3());
			}
			{
				newCompositeNode(grammarAccess.getRelationDomAccess().getGeneralEntityParserRuleCall_0_4());
			}
			this_GeneralEntity_4=ruleGeneralEntity
			{
				$current = $this_GeneralEntity_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5='target:'
			{
				newLeafNode(otherlv_5, grammarAccess.getRelationDomAccess().getTargetKeyword_0_5());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationDomRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getRelationDomAccess().getTypeSpecialEntityCrossReference_0_6_0());
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationDomRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getRelationDomAccess().getTypeGeneralEntityCrossReference_1_0_0());
					}
				)
			)
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getRelationDomAccess().getRightCurlyBracketKeyword_1_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
