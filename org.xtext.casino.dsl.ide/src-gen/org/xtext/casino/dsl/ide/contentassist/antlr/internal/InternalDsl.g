/*
 * generated by Xtext 2.18.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.casino.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.casino.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.casino.dsl.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
		(rule__Domainmodel__ElementsAssignment)*
		{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomain
entryRuleDomain
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAccess().getGroup()); }
		(rule__Domain__Group__0)
		{ after(grammarAccess.getDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubmodule
entryRuleSubmodule
:
{ before(grammarAccess.getSubmoduleRule()); }
	 ruleSubmodule
{ after(grammarAccess.getSubmoduleRule()); } 
	 EOF 
;

// Rule Submodule
ruleSubmodule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubmoduleAccess().getGroup()); }
		(rule__Submodule__Group__0)
		{ after(grammarAccess.getSubmoduleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getTypeAssignment()); }
		(rule__Entity__TypeAssignment)
		{ after(grammarAccess.getEntityAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment()); }
		(rule__QualifiedName__NameAssignment)
		{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubOperation
entryRuleSubOperation
:
{ before(grammarAccess.getSubOperationRule()); }
	 ruleSubOperation
{ after(grammarAccess.getSubOperationRule()); } 
	 EOF 
;

// Rule SubOperation
ruleSubOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubOperationAccess().getAlternatives()); }
		(rule__SubOperation__Alternatives)
		{ after(grammarAccess.getSubOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralEntity
entryRuleGeneralEntity
:
{ before(grammarAccess.getGeneralEntityRule()); }
	 ruleGeneralEntity
{ after(grammarAccess.getGeneralEntityRule()); } 
	 EOF 
;

// Rule GeneralEntity
ruleGeneralEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralEntityAccess().getGroup()); }
		(rule__GeneralEntity__Group__0)
		{ after(grammarAccess.getGeneralEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecialEntity
entryRuleSpecialEntity
:
{ before(grammarAccess.getSpecialEntityRule()); }
	 ruleSpecialEntity
{ after(grammarAccess.getSpecialEntityRule()); } 
	 EOF 
;

// Rule SpecialEntity
ruleSpecialEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecialEntityAccess().getGroup()); }
		(rule__SpecialEntity__Group__0)
		{ after(grammarAccess.getSpecialEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRole
entryRuleRole
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleAccess().getGroup()); }
		(rule__Role__Group__0)
		{ after(grammarAccess.getRoleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransaction
entryRuleTransaction
:
{ before(grammarAccess.getTransactionRule()); }
	 ruleTransaction
{ after(grammarAccess.getTransactionRule()); } 
	 EOF 
;

// Rule Transaction
ruleTransaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransactionAccess().getGroup()); }
		(rule__Transaction__Group__0)
		{ after(grammarAccess.getTransactionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperateson
entryRuleOperateson
:
{ before(grammarAccess.getOperatesonRule()); }
	 ruleOperateson
{ after(grammarAccess.getOperatesonRule()); } 
	 EOF 
;

// Rule Operateson
ruleOperateson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatesonAccess().getGroup()); }
		(rule__Operateson__Group__0)
		{ after(grammarAccess.getOperatesonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubTransaction
entryRuleSubTransaction
:
{ before(grammarAccess.getSubTransactionRule()); }
	 ruleSubTransaction
{ after(grammarAccess.getSubTransactionRule()); } 
	 EOF 
;

// Rule SubTransaction
ruleSubTransaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubTransactionAccess().getAlternatives()); }
		(rule__SubTransaction__Alternatives)
		{ after(grammarAccess.getSubTransactionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationDom
entryRuleRelationDom
:
{ before(grammarAccess.getRelationDomRule()); }
	 ruleRelationDom
{ after(grammarAccess.getRelationDomRule()); } 
	 EOF 
;

// Rule RelationDom
ruleRelationDom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationDomAccess().getGroup()); }
		(rule__RelationDom__Group__0)
		{ after(grammarAccess.getRelationDomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getDomainParserRuleCall_0()); }
		ruleDomain
		{ after(grammarAccess.getAbstractElementAccess().getDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getSpecialEntityParserRuleCall_1()); }
		ruleSpecialEntity
		{ after(grammarAccess.getAbstractElementAccess().getSpecialEntityParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getGeneralEntityParserRuleCall_2()); }
		ruleGeneralEntity
		{ after(grammarAccess.getAbstractElementAccess().getGeneralEntityParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getRelationDomParserRuleCall_3()); }
		ruleRelationDom
		{ after(grammarAccess.getAbstractElementAccess().getRelationDomParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_4()); }
		ruleType
		{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubOperationAccess().getReadKeyword_0()); }
		'Read'
		{ after(grammarAccess.getSubOperationAccess().getReadKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubOperationAccess().getCreateKeyword_1()); }
		'Create'
		{ after(grammarAccess.getSubOperationAccess().getCreateKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleAccess().getAdminKeyword_1_0()); }
		'Admin'
		{ after(grammarAccess.getRoleAccess().getAdminKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRoleAccess().getAuxKeyword_1_1()); }
		'Aux'
		{ after(grammarAccess.getRoleAccess().getAuxKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTransaction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTransactionAccess().getExchangeKeyword_0()); }
		'exchange'
		{ after(grammarAccess.getSubTransactionAccess().getExchangeKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubTransactionAccess().getSaleKeyword_1()); }
		'sale'
		{ after(grammarAccess.getSubTransactionAccess().getSaleKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
	'domain'
	{ after(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__1__Impl
	rule__Domain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__2__Impl
	rule__Domain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDomainAccess().getModulesAssignment_2()); }
		(rule__Domain__ModulesAssignment_2)
		{ after(grammarAccess.getDomainAccess().getModulesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getDomainAccess().getModulesAssignment_2()); }
		(rule__Domain__ModulesAssignment_2)*
		{ after(grammarAccess.getDomainAccess().getModulesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
	'module'
	{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
	(rule__Module__NameAssignment_1)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModuleAccess().getSubmodulesAssignment_3()); }
		(rule__Module__SubmodulesAssignment_3)
		{ after(grammarAccess.getModuleAccess().getSubmodulesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getModuleAccess().getSubmodulesAssignment_3()); }
		(rule__Module__SubmodulesAssignment_3)*
		{ after(grammarAccess.getModuleAccess().getSubmodulesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Submodule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Submodule__Group__0__Impl
	rule__Submodule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubmoduleAccess().getSubmoduleKeyword_0()); }
	'submodule'
	{ after(grammarAccess.getSubmoduleAccess().getSubmoduleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Submodule__Group__1__Impl
	rule__Submodule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubmoduleAccess().getNameAssignment_1()); }
	(rule__Submodule__NameAssignment_1)
	{ after(grammarAccess.getSubmoduleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Submodule__Group__2__Impl
	rule__Submodule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubmoduleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSubmoduleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Submodule__Group__3__Impl
	rule__Submodule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSubmoduleAccess().getOperationsAssignment_3()); }
		(rule__Submodule__OperationsAssignment_3)
		{ after(grammarAccess.getSubmoduleAccess().getOperationsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getSubmoduleAccess().getOperationsAssignment_3()); }
		(rule__Submodule__OperationsAssignment_3)*
		{ after(grammarAccess.getSubmoduleAccess().getOperationsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Submodule__Group__4__Impl
	rule__Submodule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSubmoduleAccess().getEntitiesAssignment_4()); }
		(rule__Submodule__EntitiesAssignment_4)
		{ after(grammarAccess.getSubmoduleAccess().getEntitiesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getSubmoduleAccess().getEntitiesAssignment_4()); }
		(rule__Submodule__EntitiesAssignment_4)*
		{ after(grammarAccess.getSubmoduleAccess().getEntitiesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Submodule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubmoduleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getSubmoduleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOpKeyword_0()); }
	'op'
	{ after(grammarAccess.getOperationAccess().getOpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getTypeKeyword_2()); }
	'type:'
	{ after(grammarAccess.getOperationAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getSubOperationParserRuleCall_3()); }
	ruleSubOperation
	{ after(grammarAccess.getOperationAccess().getSubOperationParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralEntity__Group__0__Impl
	rule__GeneralEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralEntityAccess().getGeneralEntityKeyword_0()); }
	'generalEntity'
	{ after(grammarAccess.getGeneralEntityAccess().getGeneralEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralEntity__Group__1__Impl
	rule__GeneralEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralEntityAccess().getQualifiedNameParserRuleCall_1()); }
	ruleQualifiedName
	{ after(grammarAccess.getGeneralEntityAccess().getQualifiedNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralEntity__Group__2__Impl
	rule__GeneralEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralEntityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGeneralEntityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralEntity__Group__3__Impl
	rule__GeneralEntity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGeneralEntityAccess().getPropertiesAssignment_3()); }
		(rule__GeneralEntity__PropertiesAssignment_3)
		{ after(grammarAccess.getGeneralEntityAccess().getPropertiesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getGeneralEntityAccess().getPropertiesAssignment_3()); }
		(rule__GeneralEntity__PropertiesAssignment_3)*
		{ after(grammarAccess.getGeneralEntityAccess().getPropertiesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralEntity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralEntityAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getGeneralEntityAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
	(rule__Property__NameAssignment_0)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeAssignment_2()); }
	(rule__Property__TypeAssignment_2)
	{ after(grammarAccess.getPropertyAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDataTypeKeyword_0()); }
	'dataType'
	{ after(grammarAccess.getTypeAccess().getDataTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
	(rule__Type__NameAssignment_1)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__0__Impl
	rule__SpecialEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialEntityAccess().getSpecialEntityKeyword_0()); }
	'specialEntity'
	{ after(grammarAccess.getSpecialEntityAccess().getSpecialEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__1__Impl
	rule__SpecialEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialEntityAccess().getQualifiedNameParserRuleCall_1()); }
	ruleQualifiedName
	{ after(grammarAccess.getSpecialEntityAccess().getQualifiedNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__2__Impl
	rule__SpecialEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialEntityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSpecialEntityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__3__Impl
	rule__SpecialEntity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSpecialEntityAccess().getPropertiesAssignment_3()); }
		(rule__SpecialEntity__PropertiesAssignment_3)
		{ after(grammarAccess.getSpecialEntityAccess().getPropertiesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getSpecialEntityAccess().getPropertiesAssignment_3()); }
		(rule__SpecialEntity__PropertiesAssignment_3)*
		{ after(grammarAccess.getSpecialEntityAccess().getPropertiesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__4__Impl
	rule__SpecialEntity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialEntityAccess().getRoleParserRuleCall_4()); }
	ruleRole
	{ after(grammarAccess.getSpecialEntityAccess().getRoleParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__5__Impl
	rule__SpecialEntity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSpecialEntityAccess().getTransactionsAssignment_5()); }
		(rule__SpecialEntity__TransactionsAssignment_5)
		{ after(grammarAccess.getSpecialEntityAccess().getTransactionsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getSpecialEntityAccess().getTransactionsAssignment_5()); }
		(rule__SpecialEntity__TransactionsAssignment_5)*
		{ after(grammarAccess.getSpecialEntityAccess().getTransactionsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpecialEntity__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecialEntityAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSpecialEntityAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__0__Impl
	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
	'role:'
	{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Role__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleAccess().getAlternatives_1()); }
	(rule__Role__Alternatives_1)
	{ after(grammarAccess.getRoleAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transaction__Group__0__Impl
	rule__Transaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransactionAccess().getTrxKeyword_0()); }
	'trx'
	{ after(grammarAccess.getTransactionAccess().getTrxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transaction__Group__1__Impl
	rule__Transaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransactionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTransactionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transaction__Group__2__Impl
	rule__Transaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransactionAccess().getTypeKeyword_2()); }
	'type:'
	{ after(grammarAccess.getTransactionAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transaction__Group__3__Impl
	rule__Transaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransactionAccess().getSubTransactionParserRuleCall_3()); }
	ruleSubTransaction
	{ after(grammarAccess.getTransactionAccess().getSubTransactionParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transaction__Group__4__Impl
	rule__Transaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTransactionAccess().getOperatesonAssignment_4()); }
		(rule__Transaction__OperatesonAssignment_4)
		{ after(grammarAccess.getTransactionAccess().getOperatesonAssignment_4()); }
	)
	(
		{ before(grammarAccess.getTransactionAccess().getOperatesonAssignment_4()); }
		(rule__Transaction__OperatesonAssignment_4)*
		{ after(grammarAccess.getTransactionAccess().getOperatesonAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transaction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransactionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTransactionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operateson__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operateson__Group__0__Impl
	rule__Operateson__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operateson__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatesonAccess().getOperates_onKeyword_0()); }
	'operates_on:'
	{ after(grammarAccess.getOperatesonAccess().getOperates_onKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operateson__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operateson__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operateson__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperatesonAccess().getTypeAssignment_1()); }
	(rule__Operateson__TypeAssignment_1)
	{ after(grammarAccess.getOperatesonAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDom__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__0__Impl
	rule__RelationDom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getRelKeyword_0()); }
	'rel'
	{ after(grammarAccess.getRelationDomAccess().getRelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__1__Impl
	rule__RelationDom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRelationDomAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__2__Impl
	rule__RelationDom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getTypeKeyword_2()); }
	'type:'
	{ after(grammarAccess.getRelationDomAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__3__Impl
	rule__RelationDom__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getCompositionKeyword_3()); }
	'Composition'
	{ after(grammarAccess.getRelationDomAccess().getCompositionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__4__Impl
	rule__RelationDom__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getSourceKeyword_4()); }
	'source:'
	{ after(grammarAccess.getRelationDomAccess().getSourceKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__5__Impl
	rule__RelationDom__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getTypeAssignment_5()); }
	(rule__RelationDom__TypeAssignment_5)
	{ after(grammarAccess.getRelationDomAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__6__Impl
	rule__RelationDom__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getTargetKeyword_6()); }
	'target:'
	{ after(grammarAccess.getRelationDomAccess().getTargetKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__7__Impl
	rule__RelationDom__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getTargetAssignment_7()); }
	(rule__RelationDom__TargetAssignment_7)
	{ after(grammarAccess.getRelationDomAccess().getTargetAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationDom__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationDomAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getRelationDomAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getDomainmodelAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__ModulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getModulesModuleParserRuleCall_2_0()); }
		ruleModule
		{ after(grammarAccess.getDomainAccess().getModulesModuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__SubmodulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getSubmodulesSubmoduleParserRuleCall_3_0()); }
		ruleSubmodule
		{ after(grammarAccess.getModuleAccess().getSubmodulesSubmoduleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubmoduleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSubmoduleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__OperationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubmoduleAccess().getOperationsOperationParserRuleCall_3_0()); }
		ruleOperation
		{ after(grammarAccess.getSubmoduleAccess().getOperationsOperationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Submodule__EntitiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubmoduleAccess().getEntitiesEntityParserRuleCall_4_0()); }
		ruleEntity
		{ after(grammarAccess.getSubmoduleAccess().getEntitiesEntityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getTypeQualifiedNameCrossReference_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getTypeQualifiedNameIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getTypeQualifiedNameIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getTypeQualifiedNameCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralEntity__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getGeneralEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPropertyAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getSpecialEntityAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialEntity__TransactionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecialEntityAccess().getTransactionsTransactionParserRuleCall_5_0()); }
		ruleTransaction
		{ after(grammarAccess.getSpecialEntityAccess().getTransactionsTransactionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__OperatesonAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransactionAccess().getOperatesonOperatesonParserRuleCall_4_0()); }
		ruleOperateson
		{ after(grammarAccess.getTransactionAccess().getOperatesonOperatesonParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operateson__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatesonAccess().getTypeGeneralEntityCrossReference_1_0()); }
		(
			{ before(grammarAccess.getOperatesonAccess().getTypeGeneralEntityIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperatesonAccess().getTypeGeneralEntityIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getOperatesonAccess().getTypeGeneralEntityCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationDomAccess().getTypeGeneralEntityCrossReference_5_0()); }
		(
			{ before(grammarAccess.getRelationDomAccess().getTypeGeneralEntityIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationDomAccess().getTypeGeneralEntityIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getRelationDomAccess().getTypeGeneralEntityCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDom__TargetAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationDomAccess().getTargetEntityParserRuleCall_7_0()); }
		ruleEntity
		{ after(grammarAccess.getRelationDomAccess().getTargetEntityParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
